// ---------------------------
// Prisma Schema
// ---------------------------

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // ya mysql/sqlite tumhari DB ke hisaab se
  url      = env("DATABASE_URL")
}

// ---------------------------
// üßë User & Auth
// ---------------------------
model User {
  id             String          @id @default(cuid())
  email          String          @unique
  password       String
  role           String          @default("user") // "user" | "admin" | "provider"
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt

  orders         Order[]
  subscriptions  Subscription[]
  auditLogs      AuditLog[]
}

// ---------------------------
// üõ†Ô∏è Service Providers
// ---------------------------
model Provider {
  id          String   @id @default(cuid())
  name        String
  apiUrl      String
  apiKey      String
  status      String   @default("active")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  orders Order[]
}

// ---------------------------
// üì¶ Orders
// ---------------------------
model Order {
  id          String   @id @default(cuid())
  userId      String
  providerId  String
  serviceName String
  quantity    Int
  status      String   @default("pending")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user     User     @relation(fields: [userId], references: [id])
  provider Provider @relation(fields: [providerId], references: [id])
}

// ---------------------------
// üí≥ Subscription & Billing
// ---------------------------
model Plan {
  id          String   @id @default(cuid())
  name        String
  description String?
  price       Float
  currency    String   @default("USD")
  interval    String   // "monthly" | "yearly"
  features    Json
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  subscriptions Subscription[]
}

model Subscription {
  id          String   @id @default(cuid())
  userId      String
  planId      String
  status      String   // "active" | "canceled" | "expired"
  startDate   DateTime @default(now())
  endDate     DateTime?
  renewsAt    DateTime?
  createdAt   DateTime @default(now())

  user   User @relation(fields: [userId], references: [id])
  plan   Plan @relation(fields: [planId], references: [id])
  invoices Invoice[]
}

model Invoice {
  id             String   @id @default(cuid())
  subscriptionId String
  amount         Float
  currency       String   @default("USD")
  status         String   // "paid" | "pending" | "failed"
  issuedAt       DateTime @default(now())
  paidAt         DateTime?
  dueDate        DateTime

  subscription Subscription @relation(fields: [subscriptionId], references: [id])
}

// ---------------------------
// üìä Analytics & Audit
// ---------------------------
model AuditLog {
  id        String   @id @default(cuid())
  userId    String
  action    String
  ip        String?
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}

model AnalyticsLog {
  id        String   @id @default(cuid())
  event     String
  metadata  Json
  createdAt DateTime @default(now())
}
